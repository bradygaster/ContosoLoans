# Please refer https://aka.ms/HTTPSinContainer on how to setup an https developer certificate for your ASP.NET Core service.

version: '3.4'

services:

  azurite:
    image: mcr.microsoft.com/azure-storage/azurite
    command: "azurite --loose --blobHost 0.0.0.0 --blobPort 10000 --queueHost 0.0.0.0 --queuePort 10001 --location /workspace --debug /workspace/debug.log"
    ports:
      - 10010:10000
      - 10011:10001
      - 10012:10002
    volumes:
      - ./azurite:/workspace

  creditcheck:
    image: contosoloans/creditcheck
    ports:
      - 5001:80
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - SiloName=CreditCheck
      - AZURE_TABLE_SERVICE_CONNECTION_STRING=DefaultEndpointsProtocol=http;AccountName=devstoreaccount1;AccountKey=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==;BlobEndpoint=http://host.docker.internal:10000/devstoreaccount1;QueueEndpoint=http://host.docker.internal:10001/devstoreaccount1;TableEndpoint=http://host.docker.internal:10002/devstoreaccount1;
    build:
      context: .
      dockerfile: src/CreditCheck/Dockerfile
    depends_on:
      - azurite

  loanreception:
    image: contosoloans/loanreception
    ports:
      - 5002:80
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - SiloName=LoanReception
      - AZURE_TABLE_SERVICE_CONNECTION_STRING=DefaultEndpointsProtocol=http;AccountName=devstoreaccount1;AccountKey=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==;BlobEndpoint=http://host.docker.internal:10000/devstoreaccount1;QueueEndpoint=http://host.docker.internal:10001/devstoreaccount1;TableEndpoint=http://host.docker.internal:10002/devstoreaccount1;
    build:
      context: .
      dockerfile: src/LoanReception/Dockerfile
    depends_on:
      - azurite
      - creditcheck

  loanprocessmonitor:
    image: contosoloans/loanprocessmonitor
    ports:
      - 5003:80
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - SiloName=LoanProcessMonitor
      - AZURE_TABLE_SERVICE_CONNECTION_STRING=DefaultEndpointsProtocol=http;AccountName=devstoreaccount1;AccountKey=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==;BlobEndpoint=http://host.docker.internal:10000/devstoreaccount1;QueueEndpoint=http://host.docker.internal:10001/devstoreaccount1;TableEndpoint=http://host.docker.internal:10002/devstoreaccount1;
    build:
      context: .
      dockerfile: src/LoanProcessMonitor/Dockerfile
    depends_on:
      - loanreception

  zipkin:
    image: openzipkin/zipkin
    ports:
      - 9411:9411

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - 9090:9090
    restart: unless-stopped
    volumes:
      - ./prometheus:/etc/prometheus
      - prom_data:/prometheus

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - 3000:3000
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=grafana
    volumes:
      - ./grafana:/etc/grafana/provisioning/datasources

volumes:
  prom_data: